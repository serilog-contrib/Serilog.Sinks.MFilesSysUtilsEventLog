<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Sinks.MFilesSysUtilsEventLog</name>
    </assembly>
    <members>
        <member name="T:Serilog.MFilesSysUtilsEventLogSinkExtensions">
            <summary>
            Adds the WriteTo.MFilesSysUtilsEventLogSink() extension method to <see cref="T:Serilog.LoggerConfiguration"/>.
            </summary>
        </member>
        <member name="M:Serilog.MFilesSysUtilsEventLogSinkExtensions.MFilesSysUtilsEventLogSink(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Writes log events to the M-Files SysUtils event log helper
            </summary>
            <param name="loggerSinkConfiguration">Logger sink configuration</param>
            <param name="restrictedToMinimumLevel">The minimum level for
            events passed through the sink. Ignored when <paramref name="levelSwitch"/> is specified.</param>
            <param name="outputTemplate">A message template describing the format used to write to the sink.
            The default is <code>"[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"</code>.</param>
            <param name="formatProvider">Supplies culture-specific formatting information, or null.</param>
            <param name="levelSwitch">The minimum level for
            events passed through the sink. Ignored when <paramref name="levelSwitch"/> is specified.</param>
            <returns>Configuration object allowing method chaining.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="loggerSinkConfiguration"/> is <code>null</code></exception>
        </member>
        <member name="M:Serilog.MFilesSysUtilsEventLogSinkExtensions.MFilesSysUtilsEventLogSink(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Formatting.ITextFormatter,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Writes log events to the M-Files SysUtils event log helper
            </summary>
            <param name="loggerSinkConfiguration">Logger sink configuration</param>
            <param name="formatter">Controls the rendering of log events into text, for example to log JSON. To
            control plain text formatting, use the overload that accepts an output template.</param>
            <param name="restrictedToMinimumLevel">The minimum level for
            events passed through the sink. Ignored when <paramref name="levelSwitch"/> is specified.</param>
            <param name="levelSwitch"></param>
            <returns>Configuration object allowing method chaining.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="loggerSinkConfiguration"/> is <code>null</code></exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="formatter"/> is <code>null</code></exception>
        </member>
        <member name="T:Serilog.Sinks.MFilesSysUtilsEventLog.MFilesSysUtilsEventLogSink">
            <summary>
            The MFilesSysUtilsEventLogSink that emits log events to M-Files SysUtils Event log
            </summary>
        </member>
        <member name="M:Serilog.Sinks.MFilesSysUtilsEventLog.MFilesSysUtilsEventLogSink.#ctor(Serilog.Formatting.ITextFormatter)">
            <summary>
            Construct the MFilesSysUtilsEventLogSink with a text formatter
            </summary>
            <param name="formatter"></param>
        </member>
        <member name="M:Serilog.Sinks.MFilesSysUtilsEventLog.MFilesSysUtilsEventLogSink.Emit(Serilog.Events.LogEvent)">
            <summary>
            Write the LogEvent to the SysUtils Event log
            </summary>
            <param name="logEvent"></param>
        </member>
    </members>
</doc>
